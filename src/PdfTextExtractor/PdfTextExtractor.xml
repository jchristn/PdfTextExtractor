<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DocumentTextExtractor</name>
    </assembly>
    <members>
        <member name="T:DocumentTextExtractor.IDocumentParser">
            <summary>
            Document text extractor abstract class.
            </summary>
        </member>
        <member name="M:DocumentTextExtractor.IDocumentParser.ExtractMetadata">
            <summary>
            Extract metadata from document.
            </summary>
            <returns>Dictionary containing metadata.</returns>
        </member>
        <member name="M:DocumentTextExtractor.IDocumentParser.ExtractText">
            <summary>
            Extract text from document.
            </summary>
            <returns>Text contents.</returns>
        </member>
        <member name="T:DocumentTextExtractor.PdfTextExtractor">
            <summary>
            PDF text extractor.
            </summary>
        </member>
        <member name="P:DocumentTextExtractor.PdfTextExtractor.Serializer">
            <summary>
            Serialization helper.
            </summary>
        </member>
        <member name="P:DocumentTextExtractor.PdfTextExtractor.Filename">
            <summary>
            Filename.
            </summary>
        </member>
        <member name="P:DocumentTextExtractor.PdfTextExtractor.Logger">
            <summary>
            Method to invoke to send log messages.
            </summary>
        </member>
        <member name="M:DocumentTextExtractor.PdfTextExtractor.#ctor(System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="filename">Filename.</param>
        </member>
        <member name="M:DocumentTextExtractor.PdfTextExtractor.Dispose">
            <summary>
            Dispose of resources.
            </summary>
        </member>
        <member name="M:DocumentTextExtractor.PdfTextExtractor.ExtractMetadata">
            <summary>
            Extract metadata from document.
            </summary>
            <returns>Dictionary containing metadata.</returns>
        </member>
        <member name="M:DocumentTextExtractor.PdfTextExtractor.ExtractText">
            <summary>
            Extract text from document.
            </summary>
            <returns>Text contents.</returns>
        </member>
        <member name="T:DocumentTextExtractor.SerializationHelper">
            <summary>
            Default serialization helper.
            </summary>
        </member>
        <member name="M:DocumentTextExtractor.SerializationHelper.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:DocumentTextExtractor.SerializationHelper.InstantiateConverter">
            <summary>
            Instantiation method to support fixups for various environments, e.g. Unity.
            </summary>
        </member>
        <member name="M:DocumentTextExtractor.SerializationHelper.DeserializeJson``1(System.String)">
            <summary>
            Deserialize JSON to an instance.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="json">JSON string.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:DocumentTextExtractor.SerializationHelper.SerializeJson(System.Object,System.Boolean)">
            <summary>
            Serialize object to JSON.
            </summary>
            <param name="obj">Object.</param>
            <param name="pretty">Pretty print.</param>
            <returns>JSON.</returns>
        </member>
        <member name="M:DocumentTextExtractor.SerializationHelper.DeserializeXml``1(System.Byte[])">
            <summary>
            Deserialize XML.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="bytes">XML data.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:DocumentTextExtractor.SerializationHelper.DeserializeXml``1(System.String)">
            <summary>
            Deserialize XML.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="xml">XML string.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:DocumentTextExtractor.SerializationHelper.SerializeXml(System.Object,System.Boolean)">
            <summary>
            Serialize XML.
            </summary>
            <param name="obj">Object.</param>
            <param name="pretty">Pretty print.</param>
            <returns>XML string.</returns>
        </member>
    </members>
</doc>
